# orchestrator deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchestrator
  namespace: {{ .Values.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orchestrator
  template:
    metadata:
      labels:
        app: orchestrator
    spec:
      containers:
      - name: orchestrator
        image: orchestrator:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: OC_AGENT_HOST
          value: {{ .Values.tracingEndpoint }}
        volumeMounts:
        - name: etcd-startup
          mountPath: /app/etcd
        # resources:
        #   requests:
        #     memory: "128Mi"
        #   limits:
        #     memory: "256Mi"
      - name: sidecar
        image: sidecar:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: AMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rabbit
              key: password
        - name: AMQ_USER
          value: normal_user
        - name: OC_AGENT_HOST
          value: {{ .Values.tracingEndpoint }}
      volumes:
      - name: etcd-startup
        hostPath:
          path: /Users/jorrit/Documents/master-software-engineering/thesis/DYNAMOS/configuration/etcd_launch_files

---
apiVersion: v1
kind: Service
metadata:
  name: orchestrator
  namespace: {{ .Values.Namespace }}
spec:
  selector:
    app: orchestrator
  ports:
    - name: http-orchestrator-api
      protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30010
  type: NodePort

