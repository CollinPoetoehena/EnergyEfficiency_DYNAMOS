apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: etcd
  namespace: {{ .Values.Namespace }}
spec:
  serviceName: "etcd-headless"
  replicas: 3
  selector:
    matchLabels:
      app: etcd
  template:
    metadata:
      labels:
        app: etcd
    spec:
      containers:
      - name: etcd
        image: quay.io/coreos/etcd:v3.5.1
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        ports:
        - containerPort: 2379
          name: client
        - containerPort: 2380
          name: peer
        command:
          - /usr/local/bin/etcd
          - --data-dir=/etcd-data
          - --name=$(POD_NAME)
          - --initial-advertise-peer-urls=http://$(POD_NAME).etcd-headless.{{ .Values.Namespace }}.svc.cluster.local:2380
          - --listen-peer-urls=http://0.0.0.0:2380
          - --listen-client-urls=http://0.0.0.0:2379
          - --advertise-client-urls=http://$(POD_NAME).etcd-headless.{{ .Values.Namespace }}.svc.cluster.local:2379
          - --initial-cluster-token=my-etcd-token
          - --initial-cluster=etcd-0=http://etcd-0.etcd-headless.{{ .Values.Namespace }}.svc.cluster.local:2380,etcd-1=http://etcd-1.etcd-headless.{{ .Values.Namespace }}.svc.cluster.local:2380,etcd-2=http://etcd-2.etcd-headless.{{ .Values.Namespace }}.svc.cluster.local:2380
          - --initial-cluster-state=new
        volumeMounts:
        - name: etcd-data
          mountPath: /etcd-data
  volumeClaimTemplates:
  - metadata:
      name: etcd-data
      namespace: {{ .Values.Namespace }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi


