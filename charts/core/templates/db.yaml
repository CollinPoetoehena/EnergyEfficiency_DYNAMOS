apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: db
        image: "{{ .Values.db.image }}"
        # resources:
        #   limits:
        #     memory: "{{ .Values.db.resources.limits.memory }}"
        #   requests:
        #     memory: "{{ .Values.db.resources.reservations.memory }}"
        env:
        - name: MYSQL_USER
          value: "{{ .Values.db.env.MYSQL_USER }}"
        - name: MYSQL_DATABASE
          value: "{{ .Values.db.env.MYSQL_DATABASE }}"
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sql
              key: db_root_password
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sql
              key: db_dba_password
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql

      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-pvc



---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adminer
  namespace: core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: adminer
  template:
    metadata:
      labels:
        app: adminer
    spec:
      containers:
      - name: adminer
        image: "{{ .Values.adminer.image }}"
        ports:
        - containerPort: 8080
