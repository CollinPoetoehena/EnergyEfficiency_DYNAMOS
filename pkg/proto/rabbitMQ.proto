syntax = "proto3";

package proto;

option go_package = "github.com/Jorrit05/DYNAMOS/pkg/proto";
import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";

// The sidecar definition.
service SideCar {
  rpc StartService(ServiceRequest) returns (google.protobuf.Empty) {}
  rpc Consume(ConsumeRequest) returns (stream RabbitMQMessage) {}
  rpc SendRequestApproval(RequestApproval) returns  (google.protobuf.Empty) {}
}


// The request message containing the user's name.
message ServiceRequest {
  string serviceName = 1;
  string routingKey = 2;
  bool queueAutoDelete = 3;
}

message ConsumeRequest {
  string queueName = 1;
  bool autoAck = 2;
}

message RabbitMQMessage {
  string type = 1;
  google.protobuf.Any body = 2;
}

message Auth {
  string access_token = 1;
  string refresh_token = 2;
}

message ValidationResponse {
  string type = 1;
  string request_type = 2;
  repeated string valid_data_providers = 3;
  repeated string invalid_data_providers = 4;
  Auth auth = 5;
  repeated string allowed_arche_types = 6;
  repeated string allowed_compute_providers = 7;
}

message User {
  string ID = 1;
  string UserName = 2;
}

message RequestApproval {
  string type = 1;
  User User = 2;
  repeated string data_providers = 3;
  bool sync_services = 4;
}


