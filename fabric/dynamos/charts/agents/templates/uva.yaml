# https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/deployment-v1/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uva
  namespace: uva
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uva
  template:
    metadata:
      labels:
        app: uva
      annotations:
        "linkerd.io/inject" : enabled
    spec:
      # Use the corresponding node for this, see https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.uvaNode }}
      serviceAccountName: job-creator-uva
      containers:
      - name: uva
        image: {{ .Values.dockerArtifactAccount }}/agent:{{ .Values.branchNameTag }}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: DATA_STEWARD_NAME
          value: UVA
        - name: OC_AGENT_HOST
          value: {{ .Values.tracingEndpoint }}
        # resources:
        #   requests:
        #     memory: "128Mi"
        #   limits:
        #     memory: "256Mi"
      - name: sidecar
        image: {{ .Values.dockerArtifactAccount }}/sidecar:{{ .Values.branchNameTag }}
        imagePullPolicy: Always
        env:
        - name: AMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rabbit
              key: password
        - name: AMQ_USER
          value: normal_user
        - name: OC_AGENT_HOST
          value: {{ .Values.tracingEndpoint }}

---
# https://kubernetes.io/docs/reference/kubernetes-api/service-resources/service-v1/
apiVersion: v1
kind: Service
metadata:
  name: uva
  namespace: uva
spec:
  selector:
    app: uva
  ports:
    - name: http-uva-api
      protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP


---
# https://kubernetes.io/docs/reference/kubernetes-api/service-resources/ingress-v1/
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: uva-ingress
  namespace: uva
  annotations:
    nginx.ingress.kubernetes.io/service-upstream: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: uva.uva.svc.cluster.local
    http:
      paths:
      - pathType: Prefix
        path: "/agent/v1/sqlDataRequest/uva"
        backend:
          service:
            name: uva
            port:
              number: 8080
