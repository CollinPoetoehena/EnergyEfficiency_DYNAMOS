version: '3.9'

services:
  orchestrator:
    image: orchestrator_service
    hostname: orchestrator
    networks:
      core_network:
        aliases:
          - orchestrator
    ports:
      - 8080:8080
    environment:
      ETCD_ENDPOINTS: http://etcd1:2379,etcd2=http://etcd2:2379,etcd3=http://etcd3:2379
      HOSTNAME: "orchestrator"
      AMQ_PASSWORD_FILE: /run/secrets/rabbitmq_user
      AMQ_USER: normal_user
    secrets:
      - rabbitmq_user
    volumes:
      - service_logs:/var/log/service_logs
      - /var/run/docker.sock:/var/run/docker.sock
      - /Users/jorrit/Documents/master-software-engineering/thesis/DYNAMOS/stack/:/var/log/stack-files
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      resources:
        reservations:
          memory: 128M
        limits:
          memory: 256M
  reasoner:
    image: reasoner_service
    hostname: reasoner
    ports:
      - 8081:8081
    networks:
      core_network:
        aliases:
          - reasoner
    environment:
      ETCD_ENDPOINTS: http://etcd1:2379,etcd2=http://etcd2:2379,etcd3=http://etcd3:2379
      HOSTNAME: "reasoner"
      AMQ_PASSWORD_FILE: /run/secrets/rabbitmq_user
      AMQ_USER: normal_user
    volumes:
      - service_logs:/var/log/service_logs
      - /Users/jorrit/Documents/master-software-engineering/thesis/DYNAMOS/stack/:/var/log/stack-files
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      resources:
        reservations:
          memory: 128M
        limits:
          memory: 256M

networks:
  core_network:
    external: true
  unl_1:
    external: true
  unl_2:
    external: true
  third_party:
    external: true

volumes:
  service_logs:
    external: true

secrets:
  db_root_password:
    external: true
  db_dba_password:
    external: true
  rabbitmq_user:
    external: true

